#!/usr/bin/env escript
%% -*- erlang -*-
%%! -pa ebin  -pa deps/mochiweb/ebin

main([]) ->
    io:format("USAGE: bin/load [module1 module2 ...]~n");

main(Modules) ->
    application:start(inets),
    JSON = iolist_to_binary(mochijson2:encode([list_to_binary(Module) || Module <- Modules])),
    {ok, File} = file:read_file("keys.sh"),
    {match, [Auth]} = re:run(File, "export LOGPLEX_AUTH_KEY='(\\S+)'", [{capture, all_but_first, binary}]),
    Headers = [
        {"Authorization", Auth}
    ],
    case httpc:request(post, {"http://localhost:8001/load", Headers, "application/json", JSON}, [], []) of
        {ok, {{_, 200, _}, _, Body}} ->
            io:format("~p~n", [Body]),
            ok;
        {ok, {{_, 400, _}, _, Body}} ->
            io:format("~p~n", [Body]),
            halt(1);
        {error, Reason} ->
            io:format("~p~n", [Reason]),
            halt(1)
    end.

